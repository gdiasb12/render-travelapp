{"version":3,"sources":["components/Form.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Form","react_default","a","createElement","className","onSubmit","this","props","getList","type","name","React","Component","List","error","isLoading","items","map","item","index","key","TicketInfo","Code","Name","Destination","Classification","Value","ImageList","image","Type","src","Url","alt","Description","RAW_DATA_TOKEN","API_DOMAIN","PROXY_URL","App","state","token_auth","undefined","getTokenAuth","_callee","api_token_call","regenerator_default","wrap","_context","prev","next","fetch","concat","method","body","mode","sent","json","_this","setState","access_token","stop","_callee2","e","token","dateFrom","dateTo","payloader","_context2","preventDefault","target","elements","datefrom","value","dateto","Date","toLocaleDateString","Language","Currency","destination","DateFrom","DateTO","Occupancy","AdultCount","ChildCount","ChildAges","JSON","stringify","headers","Content-Type","Authorization","then","res","result","Message","Result","components_Form","components_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+PAyBeA,mLArBP,OACAC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASC,SAAUC,KAAKC,MAAMC,SAC1CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOL,UAAU,eAAeM,KAAK,cAErDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOL,UAAU,eAAeM,KAAK,aAGzDT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,mBAhBGO,IAAMC,WC+CVC,EA/CF,SAACN,GACV,IAAMO,EAAQP,EAAMO,MACdC,EAAYR,EAAMQ,UAClBC,EAAQT,EAAMS,MAEtB,OAAIF,EACOb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAf,UAA8CU,GAC9CC,EACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAf,cACAY,EAELf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXY,EAAMC,IAAI,SAACC,EAAMC,GAAP,OACNlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBgB,IAAKD,GACvClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,uBAA3B,IAAmDe,EAAKG,WAAWC,MACnErB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,uBAA3B,IAAmDe,EAAKG,WAAWE,MACnEtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACTH,EAAAC,EAAAC,cAAA,mCADJ,IACwCe,EAAKG,WAAWG,YAAYF,KAAKrB,EAAAC,EAAAC,cAAA,WACrEF,EAAAC,EAAAC,cAAA,iCAFJ,IAEsCe,EAAKG,WAAWI,eAAeH,KAFrE,MAE8EJ,EAAKG,WAAWI,eAAeC,QAGjHzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAEXc,EAAKG,WAAWM,UAAUV,IAAI,SAACW,EAAOT,GAAR,OAC1BlB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKD,GACM,MAAfS,EAAMC,MACP5B,EAAAC,EAAAC,cAAA,OAAK2B,IAAKF,EAAMG,IAAK3B,UAAU,oBAAoB4B,IAAKJ,EAAMK,sBAYvEhC,EAAAC,EAAAC,cAAA,2BCrCT+B,SAAiB,qEAEjBC,EAAaC,iFAkHJC,6MA/GbC,MAAQ,CACNC,gBAAYC,EACZ1B,OAAO,EACPC,WAAW,EACXC,MAAO,MAGTyB,kCAAe,SAAAC,IAAA,IAAAC,EAAAJ,EAAA,OAAAK,EAAA1C,EAAA2C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgBC,MAAK,GAAAC,OAAIf,EAAJ,UAClC,CACEgB,OAAQ,OACRC,KAAMlB,EACNmB,KAAM,SALK,cACPV,EADOG,EAAAQ,KAAAR,EAAAE,KAAA,EAQYL,EAAeY,OAR3B,OAQPhB,EAROO,EAAAQ,KAUbE,EAAKC,SAAS,CACZlB,WAAYA,EAAWmB,eAXZ,wBAAAZ,EAAAa,SAAAjB,QAeflC,8CAAU,SAAAoD,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArB,EAAA1C,EAAA2C,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,UACRa,EAAEM,iBACIL,EAAQN,EAAKlB,MAAMC,WAErBwB,EAAWF,EAAEO,OAAOC,SAASC,SAASC,MACtCP,EAASH,EAAEO,OAAOC,SAASG,OAAOD,OAEnCR,IAAYC,EAPP,CAAAE,EAAAlB,KAAA,gBASRQ,EAAKC,SAAS,CAAC1C,WAAa,EAAMD,OAAS,IAE3CiD,EAAW,IAAIU,KAAKV,GAAUW,mBAAmB,SACjDV,EAAS,IAAIS,KAAKT,GAAQU,mBAAmB,SAEvCT,EAAY,CAChBU,SAAY,MACZC,SAAY,MACZC,YAAe,MACfC,SAAYf,EACZgB,OAAUf,EACVgB,UAAa,CACCC,WAAc,IACdC,WAAc,IACdC,UAAa,CAAC,QAvBtBjB,EAAAlB,KAAA,GA6BFC,MAAK,GAAAC,OAAIf,EAAJ,sBACT,CACAgB,OAAQ,OACRC,KAAMgC,KAAKC,UAAUpB,GACrBqB,QAAS,CACPC,eAAe,mBACfC,cAAA,UAAAtC,OAA2BY,MAG9B2B,KAAK,SAAAC,GAAG,OAAIA,EAAInC,SAChBkC,KACC,SAACE,GACIA,EAAOC,QACRpC,EAAKC,SAAS,CACZ1C,WAAW,EACXD,MAAO6E,EAAOC,QACd5E,MAAO,KAGTwC,EAAKC,SAAS,CACZ1C,WAAW,EACXC,MAAO2E,EAAOE,OACd/E,OAAO,KAIb,SAACA,GACC0C,EAAKC,SAAS,CACZ1C,WAAW,EACXD,MAAO,aA1DL,yBAAAoD,EAAAP,SAAAC,+IAkERtD,KAAKmC,gDAIL,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2F,EAAD,CAAMtF,QAASF,KAAKE,UACpBP,EAAAC,EAAAC,cAAC4F,EAAD,CACAjF,MAAOR,KAAKgC,MAAMxB,MAClBC,UAAWT,KAAKgC,MAAMvB,UACtBC,MAAOV,KAAKgC,MAAMtB,mBAtGdL,IAAMC,WCEJoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC","file":"static/js/main.1851ff30.chunk.js","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n    render(){\n        return ( \n        <form className=\"col-12\" onSubmit={this.props.getList}>\n            <div className=\"d-flex flex-row\">\n                <div className=\"col-6\">\n                    <label>Date From:</label>\n                    <input type=\"date\" className=\"form-control\" name=\"datefrom\" />    \n                </div>\n                <div className=\"col-6\">\n                    <label>Date To:</label>\n                    <input type=\"date\" className=\"form-control\" name=\"dateto\"/>    \n                </div>\n            </div>\n            <br/>\n            <div className=\"col text-center\">\n                <button className=\"btn btn-primary\">Search</button>\n            </div>\n        </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst List = (props) => {\n    const error = props.error;\n    const isLoading = props.isLoading;\n    const items = props.items;\n\n  if (error) {\n      return <div className=\"col mt-4 text-center\">Error: {error}</div>;\n  } else if (isLoading) {\n      return <div className=\"col mt-4 text-center\">Loading...</div>;\n  } else if (items) {\n      return (\n        <div className=\"col mt-4\">\n        {\n            items.map((item, index) => (\n                <div className=\"card col-12 mt-4\" key={index}>\n                <div className=\"card-body col-12\">\n                    <h5 className=\"card-title\"><strong>Code:</strong> {item.TicketInfo.Code}</h5>\n                    <h5 className=\"card-title\"><strong>Name:</strong> {item.TicketInfo.Name}</h5>\n                    <p className=\"card-text\">\n                        <strong>Destination Code:</strong> {item.TicketInfo.Destination.Code}<br />\n                        <strong>Classification:</strong> {item.TicketInfo.Classification.Code} - {item.TicketInfo.Classification.Value}\n                    </p>\n                </div> \n                <br/>\n                <div className=\"card-body col-12 d-flex flex-wrap\">\n                {\n                    item.TicketInfo.ImageList.map((image, index) => (\n                        <div key={index}>    \n                        {image.Type === 'S' &&\n                        <img src={image.Url} className='rounded mb-2 mr-2' alt={image.Description} />\n                    }\n                    </div>\n                    ))\n                }\n                </div>  \n                </div>\n                ))\n        }\n        </div>\n        );\n    } else {\n        return <div>No results.</div>;\n    }\n}\n\n\n\nexport default List;\n","import React from 'react'; \nimport Form from './components/Form';\nimport List from './components/List';\nimport './App.css';\n\n\nconst RAW_DATA_TOKEN = 'grant_type=password&username=test1@test2.com&password=Aa234567%21'; \nconst PROXY_URL = \"https://cors-anywhere.herokuapp.com/\";\nconst API_DOMAIN = PROXY_URL+\"http://travellogix.api.test.conceptsol.com\";\n\nclass App extends React.Component {\n  state = {\n    token_auth: undefined,\n    error: false,\n    isLoading: false,\n    items: []\n  }\n\n  getTokenAuth = async () => {\n    const api_token_call = await fetch(`${API_DOMAIN}/Token`, \n    { \n      method: 'post',\n      body: RAW_DATA_TOKEN,\n      mode: 'cors'\n    });\n    \n    const token_auth = await api_token_call.json();\n\n    this.setState({\n      token_auth: token_auth.access_token\n    });\n  }\n\n  getList = async (e) => {\n    e.preventDefault();\n    const token = this.state.token_auth;\n    \n    var dateFrom = e.target.elements.datefrom.value;\n    var dateTo = e.target.elements.dateto.value;\n\n    if(dateFrom && dateTo){\n\n    this.setState({'isLoading': true, 'error': false});\n      \n    dateFrom = new Date(dateFrom).toLocaleDateString(\"en-US\");\n    dateTo = new Date(dateTo).toLocaleDateString(\"en-US\");\n\n    const payloader = { \n      \"Language\": \"ENG\", \n      \"Currency\": \"USD\", \n      \"destination\": \"MCO\", \n      \"DateFrom\": dateFrom, \n      \"DateTO\": dateTo, \n      \"Occupancy\": { \n                    \"AdultCount\": \"1\", \n                    \"ChildCount\": \"1\", \n                    \"ChildAges\": [\"10\"] \n      } \n\n    } \n\n\n    await fetch(`${API_DOMAIN}/api/Ticket/Search`,\n      {\n      method: 'POST',\n      body: JSON.stringify(payloader),\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    .then(res => res.json())\n    .then(\n      (result) => {\n        if(result.Message){\n          this.setState({\n            isLoading: false,\n            error: result.Message,\n            items: []\n          });\n        } else {          \n          this.setState({\n            isLoading: false,\n            items: result.Result,\n            error: false\n          });\n        }\n      },\n      (error) => {\n        this.setState({\n          isLoading: false,\n          error: 'Error!'\n        });\n      }\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.getTokenAuth();\n  }\n  \n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <Form getList={this.getList} />\n              <List \n              error={this.state.error}\n              isLoading={this.state.isLoading}\n              items={this.state.items}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}